General:
 * have a configuration dialog (Qxt provides a nice one)
   - possibility to change arduino, sketchbook paths
   - output verbosity
 * network stuff
   - check for updates (when we have a first release)
   - download and install the SDK automatically, in a personal place like QDesktopServices::DataLocation
 * functionality as plugins
   - can add tabs in the Utility dock, or add new toolbars, menus
 * use native system icons when available
 * port to Mac and Windows
   - device enumeration: Device.cpp
   - Serial.cpp
 * help menu:
   - community links: arduino forum, maybe other resources
   - about dialog

Browser:
 * ability to search documentation
   - and remove the silly html search form at the top
   - maybe also remove the page header completely to gain place
   -> The arduino doc is located inside an iframe, but jQuery can't modify it because of Webkit's XSS policy.
      I'm currently looking for a solution.
 * make a context menu
 * possibility to reload
   - and not lose the current documentation page.
 * make it browsable with keyboard shortcuts
 * have prev, next buttons in the documentation tab (javascript)
 * help for the IDE itself
 * change jQuery style in settings (low importance)

Editor:
 * give it a section in the config dialog (see "General")
   - fonts, indentation, style, ... (QScintilla)
 * improve the editor (denis)
   - automatic indentation
   - ctrl+shift selection [DONE]
   - tab switching (Ctrl-PageUp, Ctrl-PageDown) [DONE]
 * highlight the Arduino-specific keywords for functions (pinMode, digitalRead, ...)
 * auto-completion
   - need to find out how to lex implicit includes (WProgram.h)
 * code snippets

Plugin ideas:
 * serial debugger
 * serial communication
   - connect the IDE to the Arduino and make simple reads/writes
 * simulation
 * pastebin

Features from the original IDE:
 * make menu items for the libraries: they add the needed includes at the top of the current source.
 * user libraries
 * serial monitor
 * burn bootloader, program using external programmer

Packaging:
 * Archlinux, CPack
 * we need to ship grantlee plugins on Mac and Windows:
   - they should reside somewhere in the application directory (like grantlee_plugins/)
   -> adapt CMakeLists.txt
